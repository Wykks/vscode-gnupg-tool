{
  "name": "vscode-gnupg-tool",
  "repository": {
    "type": "git",
    "url": "https://github.com/heilingbrunner/vscode-gnupg-tool.git"
  },
  "displayName": "GnuPG-Tool",
  "description": "Tool for a simple usage of GnuPG",
  "version": "1.0.5",
  "publisher": "JHeilingbrunner",
  "license": "MIT",
  "icon": "images/vscode-gnupg-tool-logo.png",
  "engines": {
    "vscode": "^1.27.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "encryption",
    "decryption",
    "sign",
    "verify",
    "gnupg",
    "gpg",
    "pgp",
    "crypto"
  ],
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "activationEvents": [
    "onCommand:extension.CheckGnuPG",
    "onCommand:extension.ListPublicKeys",
    "onCommand:extension.ListSecretKeys",
    "onCommand:extension.ShowSmartcard",
    "onCommand:extension.EncryptSelectionAsym",
    "onCommand:extension.EncryptSelectionSymm",
    "onCommand:extension.EncryptFileAsym",
    "onCommand:extension.EncryptFileSymm",
    "onCommand:extension.PreviewEncryptAsym",
    "onCommand:extension.PreviewEncryptSymm",
    "onCommand:extension.DecryptSelection",
    "onCommand:extension.DecryptFile",
    "onCommand:extension.PreviewDecrypt",
    "onCommand:extension.SignFile",
    "onCommand:extension.VerifyFile",
    "onCommand:extension.EndSession",
    "onCommand:extension.ImportKeys",
    "onCommand:extension.ExportPublicKeys",
    "onCommand:extension.ExportSecretKeys",
    "onCommand:extension.ExportSecretSubKeys",
    "workspaceContains:**/*.asc",
    "workspaceContains:**/*.gpg",
    "workspaceContains:**/*.sig",
    "workspaceContains:**/*.key"
  ],
  "contributes": {
    "languages": [
      {
        "id": "asc",
        "aliases": [
          "asc"
        ],
        "extensions": [
          "asc"
        ],
        "configuration": "./asc.language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "asc",
        "scopeName": "source.asc",
        "path": "./syntaxes/asc.tmLanguage.json"
      }
    ],
    "commands": [
      {
        "command": "extension.CheckGnuPG",
        "title": "%command.CheckGnuPG.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.ListPublicKeys",
        "title": "%command.ListPublicKeys.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.ListSecretKeys",
        "title": "%command.ListSecretKeys.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.ShowSmartcard",
        "title": "%command.ShowSmartcard.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.EndSession",
        "title": "%command.EndSession.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.EncryptSelectionAsym",
        "title": "%command.EncryptSelectionAsym.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.EncryptSelectionSymm",
        "title": "%command.EncryptSelectionSymm.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.EncryptFileAsym",
        "title": "%command.EncryptFileAsym.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.EncryptFileSymm",
        "title": "%command.EncryptFileSymm.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.PreviewEncryptAsym",
        "title": "%command.PreviewEncryptAsym.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.PreviewEncryptSymm",
        "title": "%command.PreviewEncryptSymm.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.DecryptSelection",
        "title": "%command.DecryptSelection.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.DecryptFile",
        "title": "%command.DecryptFile.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.PreviewDecrypt",
        "title": "%command.PreviewDecrypt.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.SignFile",
        "title": "%command.SignFile.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.VerifyFile",
        "title": "%command.VerifyFile.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.ImportKeys",
        "title": "%command.ImportKeys.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.ExportPublicKeys",
        "title": "%command.ExportPublicKeys.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.ExportSecretKeys",
        "title": "%command.ExportSecretKeys.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.ExportSecretSubKeys",
        "title": "%command.ExportSecretSubKeys.title%",
        "category": "GnuPG"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "extension.CheckGnuPG",
          "group": "GnuPG"
        },
        {
          "command": "extension.ListPublicKeys",
          "group": "GnuPG"
        },
        {
          "command": "extension.ListSecretKeys",
          "group": "GnuPG"
        },
        {
          "command": "extension.ShowSmartcard",
          "group": "GnuPG"
        },
        {
          "command": "extension.EndSession",
          "group": "GnuPG"
        }
      ],
      "explorer/context": [
        {
          "command": "extension.PreviewEncryptAsym",
          "group": "gnupg1@1",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.PreviewEncryptSymm",
          "group": "gnupg1@2",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.PreviewDecrypt",
          "group": "gnupg1@3",
          "when": "resourceExtname == .asc"
        },
        {
          "command": "extension.PreviewDecrypt",
          "group": "gnupg1@3",
          "when": "resourceExtname == .gpg"
        },
        {
          "command": "extension.EncryptFileAsym",
          "group": "gnupg2@1",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.EncryptFileSymm",
          "group": "gnupg2@2",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.DecryptFile",
          "group": "gnupg2@3",
          "when": "resourceExtname == .asc"
        },
        {
          "command": "extension.DecryptFile",
          "group": "gnupg2@3",
          "when": "resourceExtname == .gpg"
        },
        {
          "command": "extension.SignFile",
          "group": "gnupg2@3",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.VerifyFile",
          "group": "gnupg2@4",
          "when": "resourceExtname == .sig"
        },
        {
          "command": "extension.ImportKeys",
          "group": "gnupg3@1",
          "when": "resourceExtname == .asc"
        },
        {
          "command": "extension.ImportKeys",
          "group": "gnupg3@1",
          "when": "resourceExtname == .gpg"
        },
        {
          "command": "extension.ImportKeys",
          "group": "gnupg3@1",
          "when": "resourceExtname == .key"
        },
        {
          "command": "extension.ExportPublicKeys",
          "group": "gnupg3@2",
          "when": "resourceExtname == .asc"
        },
        {
          "command": "extension.ExportPublicKeys",
          "group": "gnupg3@2",
          "when": "resourceExtname == .key"
        },
        {
          "command": "extension.ExportSecretKeys",
          "group": "gnupg3@3",
          "when": "resourceExtname == .asc"
        },
        {
          "command": "extension.ExportSecretKeys",
          "group": "gnupg3@3",
          "when": "resourceExtname == .key"
        },
        {
          "command": "extension.ExportSecretSubKeys",
          "group": "gnupg3@4",
          "when": "resourceExtname == .asc"
        },
        {
          "command": "extension.ExportSecretSubKeys",
          "group": "gnupg3@4",
          "when": "resourceExtname == .key"
        }
      ],
      "editor/context": [
        {
          "command": "extension.EncryptSelectionAsym",
          "when": "editorHasSelection",
          "group": "gnupg@1"
        },
        {
          "command": "extension.EncryptSelectionSymm",
          "when": "editorHasSelection",
          "group": "gnupg@2"
        },
        {
          "command": "extension.DecryptSelection",
          "when": "editorHasSelection",
          "group": "gnupg@3"
        }
      ],
      "editor/title": [
        {
          "command": "extension.PreviewEncryptAsym",
          "group": "gnupg1@1",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.PreviewDecrypt",
          "group": "gnupg1@3",
          "when": "resourceExtname == .asc"
        },
        {
          "command": "extension.PreviewDecrypt",
          "group": "gnupg1@3",
          "when": "resourceExtname == .gpg"
        },
        {
          "command": "extension.EncryptFileAsym",
          "group": "gnupg2@1",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.EncryptFileSymm",
          "group": "gnupg2@2",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.DecryptFile",
          "group": "gnupg2@3",
          "when": "resourceExtname == .asc"
        },
        {
          "command": "extension.DecryptFile",
          "group": "gnupg2@3",
          "when": "resourceExtname == .gpg"
        },
        {
          "command": "extension.SignFile",
          "group": "gnupg3@1",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.VerifyFile",
          "group": "gnupg3@2",
          "when": "resourceExtname == .sig"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "GnuPG Tool Configuration",
      "properties": {}
    }
  },
  "main": "./dist/extension",
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "prev-vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "npm run compile && node ./node_modules/vscode/bin/test"
  },
  "dependencies": {
    "gpg": "^0.6.0"
  },
  "devDependencies": {
    "@types/mocha": "^2.2.42",
    "@types/node": "^8.10.25",
    "ts-loader": "^4.4.2",
    "tslint": "^5.8.0",
    "typescript": "^2.6.1",
    "vscode": "^1.1.33",
    "webpack": "^4.19.1",
    "webpack-cli": "^3.1.0"
  }
}
