{
  "name": "vscode-gnupg-tool",
  "repository": {
    "type": "git",
    "url": "https://github.com/heilingbrunner/vscode-gnupg-tool.git"
  },
  "displayName": "GnuPG-Tool",
  "description": "Tool for a simple usage of GnuPG",
  "version": "1.0.9",
  "publisher": "JHeilingbrunner",
  "license": "MIT",
  "icon": "images/vscode-gnupg-tool-logo.png",
  "engines": {
    "vscode": "^1.27.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "encryption",
    "decryption",
    "sign",
    "verify",
    "gnupg",
    "gpg",
    "pgp",
    "crypto"
  ],
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "activationEvents": [
    "onCommand:extension.CheckGnuPG",
    "onCommand:extension.ClearSignFile",
    "onCommand:extension.CopyFingerprintToClipboard",
    "onCommand:extension.CopyKeyIdToClipboard",
    "onCommand:extension.Decrypt",
    "onCommand:extension.DecryptFile",
    "onCommand:extension.DecryptPreview",
    "onCommand:extension.DecryptSelection",
    "onCommand:extension.DeleteKey",
    "onCommand:extension.DeleteSecretKey",
    "onCommand:extension.EditPublicKey",
    "onCommand:extension.Encrypt",
    "onCommand:extension.EncryptFileAsym",
    "onCommand:extension.EncryptFileSymm",
    "onCommand:extension.EncryptPreviewAsym",
    "onCommand:extension.EncryptPreviewSymm",
    "onCommand:extension.EncryptSelectionAsym",
    "onCommand:extension.EncryptSelectionSymm",
    "onCommand:extension.EndSession",
    "onCommand:extension.Evironment",
    "onCommand:extension.ExportPublicKeys",
    "onCommand:extension.ExportSecretKeys",
    "onCommand:extension.ExportSecretSubKeys",
    "onCommand:extension.GenerateKey",
    "onCommand:extension.Keys",
    "onCommand:extension.ImportKeys",
    "onCommand:extension.ListPublicKeys",
    "onCommand:extension.ListSecretKeys",
    "onCommand:extension.ShowSmartcard",
    "onCommand:extension.SignFile",
    "onCommand:extension.Trust",
    "onCommand:extension.VerifyFile",
    "workspaceContains:**/*.asc",
    "workspaceContains:**/*.gpg",
    "workspaceContains:**/*.key",
    "workspaceContains:**/*.sig"
  ],
  "contributes": {
    "languages": [
      {
        "id": "asc",
        "aliases": [
          "asc"
        ],
        "extensions": [
          ".asc"
        ],
        "configuration": "./language-configurations/asc.language-configuration.json"
      },
      {
        "id": "sig",
        "aliases": [
          "sig"
        ],
        "extensions": [
          ".sig"
        ],
        "configuration": "./language-configurations/sig.language-configuration.json"
      },
      {
        "id": "key",
        "aliases": [
          "key"
        ],
        "extensions": [
          ".key"
        ],
        "configuration": "./language-configurations/key.language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "asc",
        "scopeName": "source.asc",
        "path": "./syntaxes/asc.tmLanguage.json"
      },
      {
        "language": "sig",
        "scopeName": "source.sig",
        "path": "./syntaxes/sig.tmLanguage.json"
      },
      {
        "language": "key",
        "scopeName": "source.key",
        "path": "./syntaxes/key.tmLanguage.json"
      }
    ],
    "commands": [
      {
        "command": "extension.Environment",
        "title": "%command.Environment.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.Encrypt",
        "title": "%command.Encrypt.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.Decrypt",
        "title": "%command.Decrypt.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.Trust",
        "title": "%command.Trust.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.Keys",
        "title": "%command.Keys.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.CheckGnuPG",
        "title": "%command.CheckGnuPG.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.ListPublicKeys",
        "title": "%command.ListPublicKeys.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.ListSecretKeys",
        "title": "%command.ListSecretKeys.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.ShowSmartcard",
        "title": "%command.ShowSmartcard.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.EndSession",
        "title": "%command.EndSession.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.EncryptSelectionAsym",
        "title": "%command.EncryptSelectionAsym.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.EncryptSelectionSymm",
        "title": "%command.EncryptSelectionSymm.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.EncryptFileAsym",
        "title": "%command.EncryptFileAsym.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.EncryptFileSymm",
        "title": "%command.EncryptFileSymm.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.EncryptPreviewAsym",
        "title": "%command.EncryptPreviewAsym.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.EncryptPreviewSymm",
        "title": "%command.EncryptPreviewSymm.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.DecryptSelection",
        "title": "%command.DecryptSelection.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.DecryptFile",
        "title": "%command.DecryptFile.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.DecryptPreview",
        "title": "%command.DecryptPreview.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.SignFile",
        "title": "%command.SignFile.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.ClearSignFile",
        "title": "%command.ClearSignFile.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.VerifyFile",
        "title": "%command.VerifyFile.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.ImportKeys",
        "title": "%command.ImportKeys.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.ExportPublicKeys",
        "title": "%command.ExportPublicKeys.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.ExportSecretKeys",
        "title": "%command.ExportSecretKeys.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.ExportSecretSubKeys",
        "title": "%command.ExportSecretSubKeys.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.EditPublicKey",
        "title": "%command.EditPublicKey.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.GenerateKey",
        "title": "%command.GenerateKey.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.DeleteKey",
        "title": "%command.DeleteKey.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.DeleteSecretKey",
        "title": "%command.DeleteSecretKey.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.CopyFingerprintToClipboard",
        "title": "%command.CopyFingerprintToClipboard.title%",
        "category": "GnuPG"
      },
      {
        "command": "extension.CopyKeyIdToClipboard",
        "title": "%command.CopyKeyIdToClipboard.title%",
        "category": "GnuPG"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "extension.CheckGnuPG",
          "group": "GnuPG"
        },
        {
          "command": "extension.ListPublicKeys",
          "group": "GnuPG"
        },
        {
          "command": "extension.ListSecretKeys",
          "group": "GnuPG"
        },
        {
          "command": "extension.ShowSmartcard",
          "group": "GnuPG"
        },
        {
          "command": "extension.EndSession",
          "group": "GnuPG"
        }
      ],
      "explorer/context": [
        {
          "command": "extension.EncryptPreviewAsym",
          "group": "gnupg1@1",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.EncryptPreviewSymm",
          "group": "gnupg1@2",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.DecryptPreview",
          "group": "gnupg1@3",
          "when": "resourceExtname == .asc"
        },
        {
          "command": "extension.DecryptPreview",
          "group": "gnupg1@3",
          "when": "resourceExtname == .gpg"
        },
        {
          "command": "extension.EncryptFileAsym",
          "group": "gnupg2@1",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.EncryptFileSymm",
          "group": "gnupg2@2",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.DecryptFile",
          "group": "gnupg2@3",
          "when": "resourceExtname == .asc"
        },
        {
          "command": "extension.DecryptFile",
          "group": "gnupg2@3",
          "when": "resourceExtname == .gpg"
        },
        {
          "command": "extension.SignFile",
          "group": "gnupg2@3",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.ClearSignFile",
          "group": "gnupg2@3",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.VerifyFile",
          "group": "gnupg2@4",
          "when": "resourceExtname == .sig"
        },
        {
          "command": "extension.VerifyFile",
          "group": "gnupg2@4",
          "when": "resourceExtname == .asc"
        },
        {
          "command": "extension.VerifyFile",
          "group": "gnupg2@4",
          "when": "resourceExtname == .gpg"
        },
        {
          "command": "extension.ImportKeys",
          "group": "gnupg3@1",
          "when": "resourceExtname == .asc"
        },
        {
          "command": "extension.ImportKeys",
          "group": "gnupg3@1",
          "when": "resourceExtname == .gpg"
        },
        {
          "command": "extension.ImportKeys",
          "group": "gnupg3@1",
          "when": "resourceExtname == .key"
        }
      ],
      "editor/context": [
        {
          "command": "extension.EncryptSelectionAsym",
          "when": "editorHasSelection",
          "group": "gnupg@1"
        },
        {
          "command": "extension.EncryptSelectionSymm",
          "when": "editorHasSelection",
          "group": "gnupg@2"
        },
        {
          "command": "extension.DecryptSelection",
          "when": "editorHasSelection",
          "group": "gnupg@3"
        }
      ],
      "editor/title": [
        {
          "command": "extension.EncryptPreviewAsym",
          "group": "gnupg1@1",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.DecryptPreview",
          "group": "gnupg1@3",
          "when": "resourceExtname == .asc"
        },
        {
          "command": "extension.DecryptPreview",
          "group": "gnupg1@3",
          "when": "resourceExtname == .gpg"
        },
        {
          "command": "extension.EncryptFileAsym",
          "group": "gnupg2@1",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.EncryptFileSymm",
          "group": "gnupg2@2",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.DecryptFile",
          "group": "gnupg2@3",
          "when": "resourceExtname == .asc"
        },
        {
          "command": "extension.DecryptFile",
          "group": "gnupg2@3",
          "when": "resourceExtname == .gpg"
        },
        {
          "command": "extension.SignFile",
          "group": "gnupg3@1",
          "when": "resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"
        },
        {
          "command": "extension.VerifyFile",
          "group": "gnupg3@2",
          "when": "resourceExtname == .sig"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "GnuPG Tool Configuration",
      "properties": {}
    }
  },
  "main": "./dist/extension",
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "prev-vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "npm run compile && node ./node_modules/vscode/bin/test"
  },
  "dependencies": {},
  "devDependencies": {
    "@types/mocha": "^5.2.6",
    "@types/node": "^11.13.4",
    "ts-loader": "^5.3.3",
    "tslint": "^5.15.0",
    "typescript": "^3.4.3",
    "vscode": "^1.1.33",
    "webpack": "^4.29.6",
    "webpack-cli": "^3.3.0"
  }
}
